/*
https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays/description/?envType=daily-question&envId=2024-08-03
*/

// Solution # 01 - (using sorting)
class Solution {
public:
    bool canBeEqual(vector<int>& target, vector<int>& arr) {
        int n = arr.size();

        sort(arr.begin(), arr.end());
        sort(target.begin(), target.end());

        for(int i=0; i<n; i++) {
            if(arr[i] != target[i])
                return false;
        }

        return true;
    }
};

// Solution # 02 - (using map)

class Solution {
public:
    bool canBeEqual(vector<int>& target, vector<int>& arr) {
        unordered_map<int, int> mp;
        for(auto& num : target) {
            mp[num]++;
        }

        for(auto& num : arr) {
            if(mp.find(num) == mp.end())
                return false;

            mp[num]--;
            if(mp[num] == 0)
                mp.erase(num);
        }

        return mp.size() == 0;
    }
};
